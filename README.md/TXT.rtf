{\rtf1\ansi\ansicpg1252\cocoartf1344\cocoasubrtf720
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww23060\viewh14780\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\b\fs36 \cf0 \
# 00.Create work directory\

\b0 mkdir blast_tutorial\
cd blast_tutorial\
\
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\
\

\b #1. Load BLAST module pre-installed on proteus\

\b0 module list\
module load ncbi-blast/gcc/64/2.2.29\
blastn -h\
blastn -help\
# blastn/blastp/blastx/tblastn/tblastx\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\fs24 \cf0 {{\NeXTGraphic Pasted Graphic.tiff \width11640 \height3780
}¬}\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\fs36 \cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 # makeblastdb -h\
\
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\
\

\b #2. Database to BLAST against\

\b0 mkdir myblastdb\
cd myblastdb\
\

\b #2a. Build customized database from fasta file\
#2a_1. Download nucleotides and proteins from an 
\i E.coli
\i0  genome\

\b0 wget ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__W3110_uid161931/*.ffn\
wget ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__W3110_uid161931/*.faa\
\

\b #2a_2. Build customized database from fasta files\

\b0 makeblastdb -h\
makeblastdb -in *.ffn -dbtype nucl -out Ecoli -parse_seqids\
makeblastdb -in *.faa -dbtype prot -out Ecoli -parse_seqids\
# "-parse_seqids" if the sequence headers were in NCBI style and therefore can be parsed. For example:\
# ">gi|568336023|gb|CM000663.2| Homo sapiens chromosome 1, GRCh38 reference primary assembly."\

\b \
#2b. Download existing database from ftp://ftp.ncbi.nlm.nih.gov/blast/db/\

\b0 wget ftp://ftp.ncbi.nlm.nih.gov/blast/db/swissprot.tar.gz\
tar zxvf swissprot.tar.gz\
rm swissprot.tar.gz\
cd ..\
\
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\
\

\b #3. What to BLAST?\

\b0 wget ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Shigella_flexneri_5_8401_uid58583/*.ffn\
# grep -n ">" *.ffn | head\
head -n 91 *.ffn > Shigella.ffn\
\
wget ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Shigella_flexneri_5_8401_uid58583/*.faa\
#grep -n ">" *.faa | head\
head -n 35 *.faa > Shigella.faa\
\
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\
\

\b #4. BLAST\

\b0 blastn -db ./myblastdb/Ecoli -outfmt 6 -max_target_seqs 3 -query Shigella.ffn -out Shigella.fna.blast1\
blastp -db ./myblastdb/Ecoli -outfmt 6 -max_target_seqs 3 -query Shigella.faa -out Shigella.faa.blast2\
blastp -db ./myblastdb/swissprot -outfmt 6 -max_target_seqs 3 -num_threads 8 -query Shigella.faa -out Shigella.faa.blast3\
blastn -remote -db nr -outfmt 6 -max_target_seqs 3 -query Shigella.ffn -out Shigella.fna.blast4\
# -perc_identity 97\
# -evalue 0.00001\
# -best_hit_overhang 0.25 -best_hit_score_edge 0.25\
# NOTE: use "-num_threads $NSLOTS" when submitting a proteus job script\
\
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\
\

\b #5. Parse BLAST output (using Shigella.faa.blast3 as an example)\

\b0 \
# parse for hits matched to E.coli\
grep "ECOLI" Shigella.faa.blast3\
\
# parse for hits with >1000 Bit-score\
awk '$12 > 1000 \{ print $0 \}' Shigella.faa.blast3\
\
# parse for best hits for each query\
sort -u -k1,1 Shigella.faa.blast3 >  Shigella.faa.blast3.besthit\
\
# count the hits by species\
awk '\{print $2\}' Shigella.faa.blast3 | awk -F "_" '\{print $2\}' | sort | uniq -c\
\
# count the hits by gene names\
awk '\{print $2\}' Shigella.faa.blast3 | awk -F "|" '\{print $5\}' | awk -F "_" '\{print $1\}' | sort | uniq -c\
\
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\
\

\b #6. Tips for doing the same thing in python (optional)\
\

\b0 # acquire sequences using BioPython\
python get_seqs.py\
\
# BLAST using BioPython\
python biopython_blast.py\
\
# parse BLAST output using BioPython\
python biopython_blastparse_xml.py\
python biopython_blastparse_tabular.py\
\
\
}